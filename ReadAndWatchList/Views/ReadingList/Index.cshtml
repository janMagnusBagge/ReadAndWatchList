@model ReadAndWatchList.ViewModels.ReadingListViewModel


<p>
    @*<a href="@Url.Action("Create")" class="btn btn-info btn-lg" data-toggle="modal" data-target="#createReadingListModal">Create Reading list</a>*@
    <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#createReadingListModal">Create Readinglist</button>
</p>
<table class="table">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.ReadingLists[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReadingLists[0].Description)
            </th>
            <th></th>
        </tr>
    </thead>
    
    @foreach (var item in @Model.ReadingLists)
    {
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                   
                    <table class="btn-toolbar">
                        <tbody>
                            <tr>
                                <td class="col-xs-4">
                                    <a href="@Url.Action("Edit", new { id=item.Id})" class="btn btn-info btn-sm col-xs-12" title="Edit">Edit <span class="glyphicon glyphicon-edit"></span></a>
                                </td>
                                <td class="col-xs-4">
                                    <a href="@Url.Action("Details", new { id=item.Id})" class="btn btn-warning btn-sm col-xs-12" title="Details">Details <span class="glyphicon glyphicon-expand"></span></a>
                                </td>
                                <td class="col-xs-4">
                                    <a href="@Url.Action("Delete", new { id=item.Id})" class="btn btn-danger btn-sm col-xs-12" title="Remove Movie/Book">Remove <span class="glyphicon glyphicon-remove"></span></a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>
        </tbody>
    }

</table>



<!-- Modal -->
<div id="createReadingListModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create readinglist</h4>
            </div>
            <div class="modal-body">
                
                <div class="overflowHidden well">
                    <div class="vscrollbar maxHeight300">
                        @foreach (var item in @Model.ReadingListRowsForCreate)
                        {
                            <div class="form-horizontal">
                                <div class="form-group">
                                    <div class="col-xs-6">
                                        @item.Name
                                    </div>
                                    <div class="col-xs-6">
                                        @item.Description
                                    </div>
                                    <div class="col-xs-12">

                                    </div>
                                </div>
                            </div>

                        }
                    </div>

                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

@*<div ng-controller="readingListIndexController" ng-init="GetReadingList()">

</div>
<script>

	(function () {

	    angular.module("app").controller("readingListIndexController", function ($scope, ApiService, $window) {
	        $scope.readingList = null;


			var onSuccess = function (data) {
			    $scope.readingList = data.readingList;

			};

			var onFail = function (response) {
				alert("Misslyckades");
			};

			$scope.GetReadingList = function () {
			    ApiService.Get("/ReadingList/GetReadingListData", onSuccess, onFail);

			}

			

		});

	}());

</script>*@