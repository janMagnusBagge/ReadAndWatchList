@*@model ReadAndWatchList.Models.MoviesAndBooks*@
@model ReadAndWatchList.ViewModels.MoviesAndBooksViewModel

@{
    ViewBag.Title = "Create Movie or Book";
}

<h2>Create Movie or Book</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Movies and Books</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherPlatforms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherPlatforms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherPlatforms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>Grade</b></div> @*@Html.LabelFor(model => model.Grade.FirstOrDefault().Text, null, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
				@*@Html.DropDownList("GradeId", Model.Grade, "--Select Grade--", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.GradeId, Model.Grade, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartOffSerie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PartOffSerie)
                    @Html.ValidationMessageFor(model => model.PartOffSerie, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
			<div class="control-label col-md-2"><b>Serie</b></div> @*@Html.LabelFor(model => model.Series.FirstOrDefault().Text, null, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
				@*@Html.DropDownList("SerieId", Model.Series, "--Select Serie--", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.SerieId, Model.Series, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
			<div class="control-label col-md-2"><b>Main Category</b></div>@*@Html.LabelFor(model => model.MainCategory.FirstOrDefault().Text, null, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @*@Html.DropDownList("MainCategoryId", Model.MainCategory, "--Select Category--", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.MainCategoryId, Model.MainCategory, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
			<div class="control-label col-md-2"><b>Sub Category</b></div> @*@Html.LabelFor(model => model.SubCategory.FirstOrDefault().Text, null, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
				@*@Html.DropDownList("SubCategoryId", Model.SubCategory, "--Select Category--", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.SubCategoryId, Model.SubCategory, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    <a href="@Url.Action("Index")" class="btn btn-default">Back to List </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
