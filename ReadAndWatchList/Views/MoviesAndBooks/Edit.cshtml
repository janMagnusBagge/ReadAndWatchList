@*@model ReadAndWatchList.Models.MoviesAndBooks*@
@model ReadAndWatchList.ViewModels.MoviesAndBooksViewModel
@{
    ViewBag.Title = "Edit Movie or Book";
}

<h2>Edit Movie or Book</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Movies and Books</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherPlatforms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherPlatforms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherPlatforms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Grade, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(m => m.GradeId, ViewBag.GradeIdChoices as SelectList, "--Select Grade--", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.GradeId, Model.Grade, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GradeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartOffSerie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PartOffSerie)
                    @Html.ValidationMessageFor(model => model.PartOffSerie, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Series, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(m => m.SerieId, ViewBag.SeriesIdChoices as SelectList, "--Select Serie--", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.SerieId, Model.Series, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SerieId, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.MainCategory, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(m => m.MainCategoryId, ViewBag.MainCategoryIdChoices as SelectList, "--Select Category--", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.MainCategoryId, Model.MainCategory, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MainCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategory, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(m => m.SubCategoryId, ViewBag.SubCategoryIdChoices as SelectList, "--Select Category--", new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.SubCategoryId, Model.SubCategory, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    <a href="@Url.Action("Index")" class="btn btn-default">Back to List </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
